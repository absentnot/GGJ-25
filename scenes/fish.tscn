[gd_scene load_steps=7 format=3 uid="uid://csugll73ijwsk"]

[ext_resource type="Texture2D" uid="uid://7w6xdcrfkn30" path="res://assets/art/shark.png" id="1_ak3tc"]
[ext_resource type="Script" path="res://fish.gd" id="1_umupl"]

[sub_resource type="Shader" id="Shader_cxdvx"]
code = "shader_type canvas_item;

uniform sampler2D flowMap; //Displacement map
uniform float strength;    //Force of the effect
uniform float speed;       //Speed of the effect

uniform bool flowing;

uniform int frames : hint_range(1, 10); //Frames of the effect

//Returns a value between 0 and 1 depending of the frames -> exemple: frames = 4, frame 1 = 0.25
float clock(float time){
	float fframes = float(frames);
	return floor(mod(time * speed, fframes)) / fframes;
}

void fragment(){
	if(flowing){
		float c = clock(TIME); //Get clock frame
		vec4 offset = texture(flowMap, vec2(UV.x + c, UV.y + c)) * strength; //Get offset
		//COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + normal.xy); //Apply offset
		COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + offset.xy - vec2(0.5,0.5)*strength)* vec4(0.825, 0.8, 1.0, 1.0); //We need to remove the displacement
	}

}


// TEST CLOCK
/*
void fragment(){
	float c = clock(TIME);
	COLOR = vec4( c, c, c, 1);
}
*/"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_uv8ss"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_mw4ro"]
width = 52
height = 52
seamless = true
as_normal_map = true
noise = SubResource("FastNoiseLite_uv8ss")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t57u3"]
shader = SubResource("Shader_cxdvx")
shader_parameter/strength = 0.02
shader_parameter/speed = 8.0
shader_parameter/flowing = true
shader_parameter/frames = 8
shader_parameter/flowMap = SubResource("NoiseTexture2D_mw4ro")

[node name="Fish" type="TextureRect"]
texture_filter = 1
material = SubResource("ShaderMaterial_t57u3")
offset_right = 150.0
offset_bottom = 150.0
texture = ExtResource("1_ak3tc")
script = ExtResource("1_umupl")
